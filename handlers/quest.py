from aiogram import types
from storage import db
from services.quest_service import apply_quest
from datetime import datetime

async def quest_handler(message: types.Message):
    user_id = message.from_user.id
    pig = db.get_pig(user_id)

    if not pig:
        await message.answer("–¢–∏ —â–µ –Ω–µ –º–∞—î—à —Ö—Ä—è–∫–∞! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π /start")
        return

    today = datetime.now().strftime("%Y-%m-%d")
    if getattr(pig, "last_quest_date", "") == today:
        await message.answer("–°—å–æ–≥–æ–¥–Ω—ñ —Ç–∏ –≤–∂–µ –≤–∏–∫–æ–Ω–∞–≤ –∫–≤–µ—Å—Ç. –ü–æ–≤–µ—Ä—Ç–∞–π—Å—è –∑–∞–≤—Ç—Ä–∞!")
        return

    quest = apply_quest(pig)
    db.save_pig(pig)

    text = f"üéØ –ö–≤–µ—Å—Ç: *{quest['title']}*\n\n{quest['description']}\n\nüéÅ –ù–∞–≥–æ—Ä–æ–¥–∞: " + \
        ", ".join([f"+{v} {k}" for k, v in quest["effects"].items()])
    
    await message.answer(text, parse_mode="Markdown")
