from aiogram import types
from aiogram.filters import CommandObject
from storage import supabase_storage as db
from utils.pig_helpers import ensure_pig_exists
from services.pig_service import check_level_up, check_level_down, is_valid_change

async def add_handler(message: types.Message, command: CommandObject):
    user_id = message.from_user.id
    pig = await ensure_pig_exists(message, user_id)
    if not pig:
        return

    args = command.args
    if not args:
        await message.answer("‚ö†Ô∏è –ü—Ä–∏–∫–ª–∞–¥: /add xp 100")
        return

    parts = args.split()
    if len(parts) < 2:
        await message.answer("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π: /add [—Ç–∏–ø] [–∑–Ω–∞—á–µ–Ω–Ω—è]")
        return

    field = parts[0].lower()

    try:
        amount = int(parts[1])
    except ValueError:
        await message.answer("‚ùå –ó–Ω–∞—á–µ–Ω–Ω—è –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º (–Ω–∞–≤—ñ—Ç—å –≤—ñ–¥'—î–º–Ω–∏–º).")
        return

    updated = True
    msg = ""

    if field == "xp":
        pig.xp += amount
        msg = f"‚ú® –ó–º—ñ–Ω–µ–Ω–æ XP –Ω–∞ {amount}"
        msg += check_level_down(pig)
        level_ups, rank_msg = check_level_up(pig)
        if level_ups:
            msg += f"\nüéâ {rank_msg or '–•—Ä—è–∫ –æ—Ç—Ä–∏–º–∞–≤ –±–æ–Ω—É—Å–∏ –∑–∞ –Ω–æ–≤—ñ —Ä—ñ–≤–Ω—ñ!'}"

    elif field == "lvl":
        pig.level = max(1, pig.level + amount)
        msg = f"‚¨ÜÔ∏è –ó–º—ñ–Ω–µ–Ω–æ —Ä—ñ–≤–µ–Ω—å –Ω–∞ {amount}"
        level_ups, rank_msg = check_level_up(pig)
        if level_ups:
            msg += f"\nüéâ {rank_msg or '–•—Ä—è–∫ –æ—Ç—Ä–∏–º–∞–≤ –±–æ–Ω—É—Å–∏ –∑–∞ –Ω–æ–≤—ñ —Ä—ñ–≤–Ω—ñ!'}"

    elif field == "str":
        if not is_valid_change("strength", pig.strength, amount):
            msg = f"‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ –∑–Ω–∏–∑–∏—Ç–∏ —Å–∏–ª—É –Ω–∏–∂—á–µ 1 (–∑–∞—Ä–∞–∑: {pig.strength})"
            updated = False
        else:
            pig.strength += amount
            msg = f"‚öîÔ∏è {'–ó–º–µ–Ω—à–µ–Ω–æ' if amount < 0 else '–î–æ–¥–∞–Ω–æ'} {abs(amount)} —Å–∏–ª–∏"

    elif field == "min":
        if not is_valid_change("mind", pig.mind, amount):
            msg = f"‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ –∑–Ω–∏–∑–∏—Ç–∏ —Ä–æ–∑—É–º –Ω–∏–∂—á–µ 1 (–∑–∞—Ä–∞–∑: {pig.mind})"
            updated = False
        else:
            pig.mind += amount
            msg = f"üß† {'–ó–º–µ–Ω—à–µ–Ω–æ' if amount < 0 else '–î–æ–¥–∞–Ω–æ'} {abs(amount)} —Ä–æ–∑—É–º—É"

    elif field == "gol":
        if not is_valid_change("gold", pig.gold, amount):
            msg = f"‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ –º–∞—Ç–∏ –º–µ–Ω—à–µ 0 –∑–æ–ª–æ—Ç–∞ (–∑–∞—Ä–∞–∑: {pig.gold})"
            updated = False
        else:
            pig.gold += amount
            msg = f"ü™ô {'–í—ñ–¥–Ω—è—Ç–æ' if amount < 0 else '–î–æ–¥–∞–Ω–æ'} {abs(amount)} –∑–æ–ª–æ—Ç–∞"

    elif field == "hp":
        pig.health += amount
        msg = f"‚ù§Ô∏è –î–æ–¥–∞–Ω–æ {amount} –∑–¥–æ—Ä–æ–≤'—è"

    elif field == "mhp":
        pig.max_health += amount
        msg = f"‚ù§Ô∏è‚Äçü©π –î–æ–¥–∞–Ω–æ {amount} –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤'—è"

    elif field == "mas":
        pig.weight += amount
        msg = f"‚öñÔ∏è –î–æ–¥–∞–Ω–æ {amount} –∫–≥ –≤–∞–≥–∏"

    elif field == "pos":
        pig.last_feed_time = ""
        pig.last_fight_date = ""
        pig.last_quest_time = ""
        pig.last_mining_time = ""
        msg = "‚ôªÔ∏è –í—Å—ñ –ø–æ–∑–∏—Ü—ñ–π–Ω—ñ —Ç–∞–π–º–µ—Ä–∏ —Å–∫–∏–Ω—É—Ç–æ"

    else:
        updated = False
        msg = f"‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å: {field}"

    if updated:
        db.save_pig(pig)

    await message.answer(msg)
