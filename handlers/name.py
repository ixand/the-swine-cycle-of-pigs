from aiogram import types
from storage import db

async def name_handler(message: types.Message):
    user_id = message.from_user.id
    text = message.text

    parts = text.split(maxsplit=1)
    if len(parts) < 2:
        await message.answer("–í–≤–µ–¥–∏ —ñ–º'—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª: /name [—ñ–º'—è]")
        return

    new_name = parts[1].strip()

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–≤–∂–∏–Ω–∏
    if len(new_name) > 10:
        await message.answer("–Ü–º'—è –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –¥–æ–≤—à–∏–º –∑–∞ 10 —Å–∏–º–≤–æ–ª—ñ–≤.")
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ö—Ä—è–∫–∞
    pig = db.get_pig(user_id)
    if not pig:
        await message.answer("–¢–∏ —â–µ –Ω–µ –º–∞—î—à —Ö—Ä—è–∫–∞! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π /start")
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —ñ–º'—è –≤–∂–µ –∑–∞–π–Ω—è—Ç–µ —ñ–Ω—à–∏–º –≥—Ä–∞–≤—Ü–µ–º
    all_pigs = db.get_all_pigs()
    for other_pig in all_pigs:
        if other_pig.name.lower() == new_name.lower() and other_pig.user_id != user_id:
            await message.answer("–¢–∞–∫–µ —ñ–º‚Äô—è –≤–∂–µ –∑–∞–π–Ω—è—Ç–µ —ñ–Ω—à–∏–º —Ö—Ä—è–∫–æ–º! –°–ø—Ä–æ–±—É–π —ñ–Ω—à–µ üê∑")
            return

    # –£—Å–ø—ñ—à–Ω–∞ –∑–º—ñ–Ω–∞ —ñ–º–µ–Ω—ñ
    pig.name = new_name
    db.save_pig(pig)
    await message.answer(f"–¢–µ–ø–µ—Ä —Ç–≤–æ–≥–æ —Ö—Ä—è–∫–∞ –∑–≤—É—Ç—å {pig.name}!")
