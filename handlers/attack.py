from aiogram import types
from storage import db
from services.pig_service import check_level_up, get_rank, attack
from datetime import datetime, timedelta
import random

async def attack_handler(message: types.Message):
    user_id = message.from_user.id
    pig1 = db.get_pig(user_id)

    if not pig1:
        await message.answer("–¢–∏ —â–µ –Ω–µ –º–∞—î—à —Ö—Ä—è–∫–∞! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π /start")
        return

    if not message.reply_to_message:
        await message.answer("–©–æ–± –±–∏—Ç–∏—Å—è, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –≥—Ä–∞–≤—Ü—è –∫–æ–º–∞–Ω–¥–æ—é /attack.")
        return

    opponent_id = message.reply_to_message.from_user.id
    if opponent_id == user_id:
        await message.answer("–ù–µ –º–æ–∂–Ω–∞ –±–∏—Ç–∏—Å—è —ñ–∑ —Å–∞–º–∏–º —Å–æ–±–æ—é! ü§¶‚Äç‚ôÇÔ∏è")
        return

    pig2 = db.get_pig(opponent_id)
    if not pig2:
        await message.answer("–£ –æ–ø–æ–Ω–µ–Ω—Ç–∞ –Ω–µ–º–∞—î —Ö—Ä—è–∫–∞!")
        return

    # –õ—ñ–º—ñ—Ç—É—î–º–æ –±–æ—ó –Ω–∞ –¥–µ–Ω—å
    today = datetime.now().strftime("%Y-%m-%d")
    if pig1.last_fight_date != today:
        pig1.fights_today = 0
        pig1.last_fight_date = today

    if pig1.fights_today >= 3:
        await message.answer("–¢–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –≤–∂–µ –ø—Ä–æ–≤—ñ–≤ 3 –±–æ—ó! –í—ñ–¥–ø–æ—á–∏–≤–∞–π. üêñ")
        return

    # –ê—Ç–∞–∫–∞
    winner = attack(pig1, pig2)
    winner.xp += 10 + random.randint(1,9)
    pig1.fights_today += 1

    # –Ø–∫—â–æ –ø—Ä–æ–≥—Ä–∞–≤ ‚Äî –º—ñ–Ω—É—Å –∑–¥–æ—Ä–æ–≤'—è
    loser = pig2 if winner.user_id == pig1.user_id else pig1
    health_loss = 10 + random.randint(1, 9)

    if loser.health <= 10 and health_loss >= 10:
        # –ü–æ–º–∏—Ä–∞—î ‚Äî –æ–±–Ω—É–ª—è—î–º–æ
        loser.level = 1
        loser.xp = 0
        loser.health = 100
        text_death = f"‚ò†Ô∏è {loser.name} –ø–æ–º–µ—Ä —É –±–æ—é —ñ –±—É–≤ –≤—ñ–¥—Ä–æ–¥–∂–µ–Ω–∏–π –Ω–∞ —Ä—ñ–≤–Ω—ñ 1!"
    
        
    else:
        # –ü—Ä–æ—Å—Ç–æ –≤—Ç—Ä–∞—á–∞—î –∑–¥–æ—Ä–æ–≤'—è
        loser.health = max(1, loser.health - health_loss)
        text_death = f"{loser.name} –≤—Ç—Ä–∞—Ç–∏–≤ {health_loss} ‚ù§Ô∏è."

    db.save_pig(pig1)
    db.save_pig(pig2)

    # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç
    if winner.user_id == user_id:
        text = f"üéâ –¢–≤—ñ–π —Ö—Ä—è–∫ {pig1.name} –ø–µ—Ä–µ–º—ñ–≥ {pig2.name} —É –Ω–µ—á–µ—Å–Ω–æ–º—É –±–æ—é!"
    else:
        text = f"üò¢ –¢–≤–æ–≥–æ —Ö—Ä—è–∫–∞ {pig1.name} –ø–µ—Ä–µ–º—ñ–≥ {pig2.name}..."

    
    old_level = winner.level  # –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å
    level_ups = check_level_up(winner)

    if level_ups > 0:
        level_text = (
        f"üèÖ –¢–≤—ñ–π —Ö—Ä—è–∫ –ø—ñ–¥–Ω—è–≤ —Ä—ñ–≤–µ–Ω—å –Ω–∞ {level_ups}!\n"
        f"‚ûï –°–∏–ª–∞ +{level_ups}, –ó–¥–æ—Ä–æ–≤'—è +{level_ups * 10}"
    )

    new_level = old_level + level_ups
    if new_level in (5, 10, 20):
        new_rank = get_rank(winner)
        level_text += f"\nüéñÔ∏è –í—ñ—Ç–∞—î–º–æ! –¢–≤—ñ–π —Ö—Ä—è–∫ –¥–æ—Å—è–≥ —Ä–∞–Ω–≥—É: {new_rank}!"

    await message.answer(level_text)  # –æ–∫—Ä–µ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
