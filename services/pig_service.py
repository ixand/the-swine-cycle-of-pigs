from models.pig import Pig
from typing import Tuple
from datetime import datetime
import random

def init_pig(user_id: int) -> Pig:
    return Pig(user_id=user_id)

def feed_pig(pig: Pig) -> Tuple[int, str | None]:
    pig.weight += random.randint(1, 11)

    if random.randint(0, 9) < 2:
        pig.strength += 1

    health_increase = random.randint(5, 15)
    pig.health = min(pig.health + health_increase, pig.max_health)

    pig.xp += 10 + random.randint(1, 5)
    level_ups, rank_msg = check_level_up(pig)  # –¢–µ–ø–µ—Ä –æ—Ç—Ä–∏–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è —Ä—ñ–≤–Ω—è

    return level_ups, rank_msg



def get_allowed_feedings(pig: Pig) -> int:
    """–ü–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö –≥–æ–¥—É–≤–∞–Ω—å –Ω–∞ –¥–µ–Ω—å –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–∞–Ω–≥—É (—Ä—ñ–≤–Ω—è)."""
    if pig.level < 5:
        return 5  # –ú–∞–ª–µ–Ω—å–∫–µ –ø–æ—Ä–æ—Å—è—Ç–∫–æ üêñ
    elif 5 <= pig.level < 10:
        return 4  # –ú–æ–ª–æ–¥–∏–π –∫–∞–±–∞–Ω üêó
    elif 10 <= pig.level < 20:
        return 3  # –ú–æ–≥—É—Ç–Ω—ñ–π —Ö—Ä—è–∫ üêΩ
    else:
        return 2  # –õ–µ–≥–µ–Ω–¥–∞ —Ñ–µ—Ä–º–∏ üê≤

def attack(pig1: Pig, pig2: Pig) -> Pig:
    """–ù–µ—á–µ—Å–Ω–∞ –∞—Ç–∞–∫–∞ ‚Äî —Ç—É—Ç —Ä–æ–∑—É–º –º–∞—î –±—ñ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è."""
    score1 = pig1.mind * 1.5 + pig1.level + random.uniform(0, 5)
    score2 = pig2.mind * 1.5 + pig2.level + random.uniform(0, 5)
    return pig1 if score1 > score2 else pig2


def check_level_up(pig: Pig) -> Tuple[int, str]:
    """–ü—ñ–¥–≤–∏—â—É—î —Ä—ñ–≤–µ–Ω—å, —è–∫—â–æ –≤–∏—Å—Ç–∞—á–∞—î XP. –†–∞–Ω–¥–æ–º–Ω–æ –¥–æ–¥–∞—î –∞–±–æ —Å–∏–ª—É, –∞–±–æ —Ä–æ–∑—É–º."""
    level_ups = 0
    rank_change_message = ""  # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—Ä–æ –∑–º—ñ–Ω—É —Ä–∞–Ω–≥—É
    text = ""  # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω–Ω–æ—ó 'text'
    
    while pig.xp >= 100:
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä–∞–Ω–≥ –¥–æ –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è —Ä—ñ–≤–Ω—è
        rank_before = get_rank(pig)
        
        pig.max_health = (pig.level * 10) + 100
        pig.level += 1
        pig.xp -= 100

        # –í–∏–ø–∞–¥–∫–æ–≤–∏–π –±–æ–Ω—É—Å: –∞–±–æ —Å–∏–ª–∞, –∞–±–æ —Ä–æ–∑—É–º
        if random.choice([True, False]):
            pig.strength += 1
        else:
            pig.mind += 1

        level_ups += 1

        # –û—Ç—Ä–∏–º—É—î–º–æ —Ä–∞–Ω–≥ –ø—ñ—Å–ª—è –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è —Ä—ñ–≤–Ω—è
        rank_after = get_rank(pig)

        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è —Ä—ñ–≤–Ω—è
        text += f"\nüìà –†—ñ–≤–µ–Ω—å –ø—ñ–¥–≤–∏—â–µ–Ω–æ –Ω–∞ {level_ups}!"

        # –Ø–∫—â–æ —Ä–∞–Ω–≥ –∑–º—ñ–Ω–∏–≤—Å—è, –¥–æ–¥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        if rank_before != rank_after:
            rank_change_message = f"\nüéñÔ∏è –†–∞–Ω–≥ –∑–º—ñ–Ω–µ–Ω–æ: {rank_before} ‚ûî {rank_after}"

    return level_ups, text + rank_change_message



def get_rank(pig: Pig) -> str:
    if pig.level >= 20:
        return "–õ–µ–≥–µ–Ω–¥–∞ —Ñ–µ—Ä–º–∏ üê≤"
    elif pig.level >= 10:
        return "–ú–æ–≥—É—Ç–Ω—ñ–π —Ö—Ä—è–∫ üêΩ"
    elif pig.level >= 5:
        return "–ú–æ–ª–æ–¥–∏–π –∫–∞–±–∞–Ω üêó"
    else:
        return "–ú–∞–ª–µ–Ω—å–∫–µ –ø–æ—Ä–æ—Å—è—Ç–∫–æ üêñ"

def fight(pig1: Pig, pig2: Pig) -> Tuple[Pig | None, Pig | None, int]:
    score1 = pig1.strength * 1.5 + pig1.mind + (pig1.weight / 10)+ pig1.health / 10 + random.uniform(0, 5)
    score2 = pig2.strength * 1.5 + pig2.mind + (pig2.weight / 10) + pig2.health / 10 + random.uniform(0, 5)

    if abs(score1 - score2) < 0.1:
        return None, None, 0  # –Ω—ñ—á–∏—è

    winner, loser = (pig1, pig2) if score1 > score2 else (pig2, pig1)
    xp_transfer = max(5, min(15, loser.xp // 5))
    winner.xp += xp_transfer
    loser.xp = max(0, loser.xp - xp_transfer)

    death_message = handle_death(loser)
    
    return winner, loser, xp_transfer, death_message

def handle_death(pig: Pig) -> str:
    """–û–±—Ä–æ–±–ª—è—î —Å–º–µ—Ä—Ç—å —Ö—Ä—è–∫–∞ —ñ –≤—ñ–¥—Ä–æ–¥–∂–µ–Ω–Ω—è –Ω–∞ —Ä—ñ–≤–Ω—ñ 1."""
    if pig.health <= 0:
        pig.level = 1
        pig.xp = 10
        pig.health = 100
        return f"‚ò†Ô∏è {pig.name} –ø–æ–º–µ—Ä —ñ –±—É–≤ –≤—ñ–¥—Ä–æ–¥–∂–µ–Ω–∏–π –Ω–∞ —Ä—ñ–≤–Ω—ñ 1!"
    return ""
