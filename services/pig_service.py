from models.pig import Pig
from typing import Tuple
from datetime import datetime
import random

def init_pig(user_id: int) -> Pig:
    return Pig(user_id=user_id)

def feed_pig(pig: Pig):
    pig.weight += random.randint(1, 11)

    # –Ü–Ω–æ–¥—ñ –¥–∞—î –±–æ–Ω—É—Å –¥–æ —Å–∏–ª–∏
    if random.randint(0, 9) < 2:
        pig.strength += 1

    # –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–¥–æ—Ä–æ–≤‚Äô—è
    health_increase = random.randint(5, 15)
    pig.health = min(pig.health + health_increase, pig.max_health)

    # –î–æ—Å–≤—ñ–¥
    pig.xp += 10 + random.randint(1, 5)

    check_level_up(pig)

def get_allowed_feedings(pig: Pig) -> int:
    """–ü–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö –≥–æ–¥—É–≤–∞–Ω—å –Ω–∞ –¥–µ–Ω—å –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–∞–Ω–≥—É (—Ä—ñ–≤–Ω—è)."""
    if pig.level < 5:
        return 5  # –ú–∞–ª–µ–Ω—å–∫–µ –ø–æ—Ä–æ—Å—è—Ç–∫–æ üêñ
    elif 5 <= pig.level < 10:
        return 4  # –ú–æ–ª–æ–¥–∏–π –∫–∞–±–∞–Ω üêó
    elif 10 <= pig.level < 20:
        return 3  # –ú–æ–≥—É—Ç–Ω—ñ–π —Ö—Ä—è–∫ üêΩ
    else:
        return 2  # –õ–µ–≥–µ–Ω–¥–∞ —Ñ–µ—Ä–º–∏ üê≤

def attack(pig1: Pig, pig2: Pig) -> Pig:
    """–ù–µ—á–µ—Å–Ω–∞ –∞—Ç–∞–∫–∞ ‚Äî —Ç—É—Ç —Ä–æ–∑—É–º –º–∞—î –±—ñ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è."""
    score1 = pig1.mind * 1.5 + pig1.level + random.uniform(0, 5)
    score2 = pig2.mind * 1.5 + pig2.level + random.uniform(0, 5)
    return pig1 if score1 > score2 else pig2


def check_level_up(pig: Pig) -> int:
    """–ü—ñ–¥–≤–∏—â—É—î —Ä—ñ–≤–µ–Ω—å, —è–∫—â–æ –≤–∏—Å—Ç–∞—á–∞—î XP. –†–∞–Ω–¥–æ–º–Ω–æ –¥–æ–¥–∞—î –∞–±–æ —Å–∏–ª—É, –∞–±–æ —Ä–æ–∑—É–º."""
    level_ups = 0
    while pig.xp >= 100:
        pig.max_health = (pig.level * 10) + 100
        pig.level += 1
        pig.xp -= 100
       
        

        # –í–∏–ø–∞–¥–∫–æ–≤–∏–π –±–æ–Ω—É—Å: –∞–±–æ —Å–∏–ª–∞, –∞–±–æ —Ä–æ–∑—É–º
        if random.choice([True, False]):
            pig.strength += 1
        else:
            pig.mind += 1

        level_ups += 1
    return level_ups

def get_rank(pig: Pig) -> str:
    if pig.level >= 20:
        return "–õ–µ–≥–µ–Ω–¥–∞ —Ñ–µ—Ä–º–∏ üê≤"
    elif pig.level >= 10:
        return "–ú–æ–≥—É—Ç–Ω—ñ–π —Ö—Ä—è–∫ üêΩ"
    elif pig.level >= 5:
        return "–ú–æ–ª–æ–¥–∏–π –∫–∞–±–∞–Ω üêó"
    else:
        return "–ú–∞–ª–µ–Ω—å–∫–µ –ø–æ—Ä–æ—Å—è—Ç–∫–æ üêñ"

def fight(pig1: Pig, pig2: Pig) -> Tuple[Pig, Pig, int]:
    """–ß–µ—Å–Ω–∏–π —Å–ø–∞—Ä–∏–Ω–≥ ‚Äî —Å–∏–ª–∞ –≤–∞–∂–ª–∏–≤—ñ—à–∞, –∞–ª–µ —Ä–æ–∑—É–º —Ç–µ–∂ –≤—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è."""
    score1 = pig1.strength * 1.5 + pig1.mind + pig1.weight + pig1.health / 10 + random.uniform(0, 5)
    score2 = pig2.strength * 1.5 + pig2.mind + pig2.weight + pig2.health / 10 + random.uniform(0, 5)
    
    if score1 > score2:
        winner, loser = pig1, pig2
    else:
        winner, loser = pig2, pig1

    xp_transfer = max(5, min(15, loser.xp // 5))
    winner.xp += xp_transfer
    loser.xp = max(0, loser.xp - xp_transfer)
    return winner, loser, xp_transfer

